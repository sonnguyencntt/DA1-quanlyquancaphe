{"ast":null,"code":"import * as Types from '../../../constants/ActionType';\nconst initialState = [];\nexport const chart = (state = initialState, action) => {\n  let newState = [...state];\n\n  if (typeof action.type.get_chart === \"undefined\") {\n    return newState;\n  } else {\n    switch (action.type.get_chart.type) {\n      case Types.GET_CHART:\n        newState = action.type.get_chart.data;\n        return newState;\n\n      default:\n        return newState;\n    }\n  }\n};\nexport default chart; // export const count_bill = (state = initialState , action) =>\n// {\n//   let newState = state;\n//   if(typeof action.type.count_bill === \"undefined\")\n//   {\n//     return newState\n//   }\n//   else\n//   {\n//   switch(action.type.count_bill.type){ \n//     case Types.GET_COUNT_BILL :\n//         newState = action.type.count_bill.data;\n//         return newState;   \n//       default: return newState;\n//   }\n// }\n// }\n// export const count_unpaid_bill = (state = initialState , action) =>\n// {\n//   let newState = state;\n//   if(typeof action.type.count_unpaid_bill === \"undefined\")\n//   {\n//     return newState\n//   }\n//   else\n//   {\n//   switch(action.type.count_unpaid_bill.type){ \n//     case Types.GET_COUNT_UNPAID_BILL :\n//         newState = action.type.count_unpaid_bill.data;\n//         return newState;   \n//       default: return newState;\n//   }\n// }\n// }\n// export const total_unpaid_bill = (state = initialState , action) =>\n// {\n//   let newState = state;\n//   if(typeof action.type.total_unpaid_bill === \"undefined\")\n//   {\n//     return newState\n//   }\n//   else\n//   {\n//   switch(action.type.total_unpaid_bill.type){ \n//     case Types.GET_TOTAL_UNPAID_BILL :\n//         newState = action.type.total_unpaid_bill.data;\n//         return newState;   \n//       default: return newState;\n//   }\n// }\n// }\n// export const total_debit_bill = (state = initialState , action) =>\n// {\n//   let newState = state;\n//   if(typeof action.type.total_debit_bill === \"undefined\")\n//   {\n//     return newState\n//   }\n//   else\n//   {\n//   switch(action.type.total_debit_bill.type){ \n//     case Types.GET_TOTAL_DEBIT_BILL :\n//         newState = action.type.total_debit_bill.data;\n//         return newState;   \n//       default: return newState;\n//   }\n// }\n// }\n// export const sum_debit_bill = (state = initialState , action) =>\n// {\n//   let newState = state;\n//   if(typeof action.type.sum_debit_bill=== \"undefined\")\n//   {\n//     return newState\n//   }\n//   else\n//   {\n//   switch(action.type.sum_debit_bill.type){ \n//     case Types.GET_SUML_DEBIT_BILL :\n//         newState = action.type.sum_debit_bill.data;\n//         return newState;   \n//       default: return newState;\n//   }\n// }\n// }","map":{"version":3,"sources":["C:/Users/DELL/Desktop/DOAN1/src/reducers/App/dashboard/chart.js"],"names":["Types","initialState","chart","state","action","newState","type","get_chart","GET_CHART","data"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,+BAAvB;AAEA,MAAMC,YAAY,GAAG,EAArB;AAGA,OAAO,MAAMC,KAAK,GAAG,CAACC,KAAK,GAAGF,YAAT,EAAwBG,MAAxB,KACrB;AACE,MAAIC,QAAQ,GAAG,CAAC,GAAGF,KAAJ,CAAf;;AACA,MAAG,OAAOC,MAAM,CAACE,IAAP,CAAYC,SAAnB,KAAiC,WAApC,EACA;AACE,WAAOF,QAAP;AACD,GAHD,MAKA;AACA,YAAOD,MAAM,CAACE,IAAP,CAAYC,SAAZ,CAAsBD,IAA7B;AAEE,WAAKN,KAAK,CAACQ,SAAX;AAEIH,QAAAA,QAAQ,GAAGD,MAAM,CAACE,IAAP,CAAYC,SAAZ,CAAsBE,IAAjC;AACA,eAAOJ,QAAP;;AAEF;AAAS,eAAOA,QAAP;AAPb;AASD;AACA,CAnBM;AAoBP,eAAeH,KAAf,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA","sourcesContent":["import * as Types from '../../../constants/ActionType';\r\n\r\nconst initialState = []\r\n\r\n\r\nexport const chart = (state = initialState , action) =>\r\n{\r\n  let newState = [...state];\r\n  if(typeof action.type.get_chart === \"undefined\")\r\n  {\r\n    return newState\r\n  }\r\n  else\r\n  {\r\n  switch(action.type.get_chart.type){ \r\n  \r\n    case Types.GET_CHART :\r\n    \r\n        newState = action.type.get_chart.data;\r\n        return newState;   \r\n\r\n      default: return newState;\r\n  }\r\n}\r\n}\r\nexport default chart\r\n// export const count_bill = (state = initialState , action) =>\r\n// {\r\n//   let newState = state;\r\n//   if(typeof action.type.count_bill === \"undefined\")\r\n//   {\r\n//     return newState\r\n//   }\r\n//   else\r\n//   {\r\n//   switch(action.type.count_bill.type){ \r\n  \r\n//     case Types.GET_COUNT_BILL :\r\n    \r\n//         newState = action.type.count_bill.data;\r\n//         return newState;   \r\n\r\n//       default: return newState;\r\n//   }\r\n// }\r\n// }\r\n// export const count_unpaid_bill = (state = initialState , action) =>\r\n// {\r\n//   let newState = state;\r\n//   if(typeof action.type.count_unpaid_bill === \"undefined\")\r\n//   {\r\n//     return newState\r\n//   }\r\n//   else\r\n//   {\r\n//   switch(action.type.count_unpaid_bill.type){ \r\n  \r\n//     case Types.GET_COUNT_UNPAID_BILL :\r\n    \r\n//         newState = action.type.count_unpaid_bill.data;\r\n//         return newState;   \r\n\r\n//       default: return newState;\r\n//   }\r\n// }\r\n// }\r\n// export const total_unpaid_bill = (state = initialState , action) =>\r\n// {\r\n//   let newState = state;\r\n//   if(typeof action.type.total_unpaid_bill === \"undefined\")\r\n//   {\r\n//     return newState\r\n//   }\r\n//   else\r\n//   {\r\n//   switch(action.type.total_unpaid_bill.type){ \r\n  \r\n//     case Types.GET_TOTAL_UNPAID_BILL :\r\n    \r\n//         newState = action.type.total_unpaid_bill.data;\r\n//         return newState;   \r\n\r\n//       default: return newState;\r\n//   }\r\n// }\r\n// }\r\n// export const total_debit_bill = (state = initialState , action) =>\r\n// {\r\n//   let newState = state;\r\n//   if(typeof action.type.total_debit_bill === \"undefined\")\r\n//   {\r\n//     return newState\r\n//   }\r\n//   else\r\n//   {\r\n//   switch(action.type.total_debit_bill.type){ \r\n  \r\n//     case Types.GET_TOTAL_DEBIT_BILL :\r\n    \r\n//         newState = action.type.total_debit_bill.data;\r\n//         return newState;   \r\n\r\n//       default: return newState;\r\n//   }\r\n// }\r\n// }\r\n// export const sum_debit_bill = (state = initialState , action) =>\r\n// {\r\n//   let newState = state;\r\n//   if(typeof action.type.sum_debit_bill=== \"undefined\")\r\n//   {\r\n//     return newState\r\n//   }\r\n//   else\r\n//   {\r\n//   switch(action.type.sum_debit_bill.type){ \r\n  \r\n//     case Types.GET_SUML_DEBIT_BILL :\r\n    \r\n//         newState = action.type.sum_debit_bill.data;\r\n//         return newState;   \r\n\r\n//       default: return newState;\r\n//   }\r\n// }\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}