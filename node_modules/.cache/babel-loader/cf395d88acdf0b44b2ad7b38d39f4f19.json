{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\DOAN1\\\\src\\\\components\\\\Chart\\\\Chart.js\";\nimport React, { Component } from 'react';\nimport get_datetime from './../../getDateTime';\nimport callApi from './../../ultis/apiCaller';\nimport { Bar } from 'react-chartjs-2';\nimport { connect } from 'react-redux';\nimport * as action from '../../actions/index';\n\nclass Chart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chartData: {\n        labels: ['Thứ 2', 'Thứ 3', 'Thứ 4', 'Thứ 5', 'Thứ 6', 'Thứ 7', 'Chủ nhật'],\n        datasets: [{\n          label: 'Doanh thu',\n          data: this.props.data,\n          backgroundColor: ['rgba(255, 99, 132, 0.6)', 'rgba(54, 162, 235, 0.6)', 'rgba(255, 206, 86, 0.6)', 'rgba(75, 192, 192, 0.6)', 'rgba(153, 102, 255, 0.6)', 'rgba(255, 159, 64, 0.6)', 'rgba(255, 99, 132, 0.6)', 'rgba(255, 99, 132, 0.6)', 'rgba(62, 138, 138, 1)']\n        }]\n      }\n    };\n  }\n\n  componentWillMount() {\n    callApi('chart', 'POST', get_datetime()).then(res => {\n      if (res == false) {\n        return;\n      }\n\n      console.log(res.data);\n      this.props.get_dataChart({\n        type: {\n          get_chart: {\n            type: 'GET_CHART',\n            data: res.data\n          }\n        }\n      });\n      console.log(res);\n    }); //this.props.get_dataChart(get_datetime())\n  }\n\n  render() {\n    console.log(this.props.data);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 2\n      }\n    }, /*#__PURE__*/React.createElement(Bar, {\n      data: this.state.chartData,\n      options: {\n        legend: {\n          display: false\n        },\n        title: {\n          display: true,\n          text: 'Thống Kê Doanh Thu Hằng Ngày Trong Tuần',\n          fontSize: 30\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 3\n      }\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    data: state.chart\n  };\n};\n\nconst mapDispatchToProps = (dispatch, props) => {\n  return {\n    get_dataChart: data => {\n      dispatch(data);\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Chart);","map":{"version":3,"sources":["C:/Users/DELL/Desktop/DOAN1/src/components/Chart/Chart.js"],"names":["React","Component","get_datetime","callApi","Bar","connect","action","Chart","constructor","props","state","chartData","labels","datasets","label","data","backgroundColor","componentWillMount","then","res","console","log","get_dataChart","type","get_chart","render","legend","display","title","text","fontSize","mapStateToProps","chart","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,SAAQC,GAAR,QAAkB,iBAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAO,KAAKC,MAAZ,MAAwB,qBAAxB;;AAEA,MAAMC,KAAN,SAAoBN,SAApB,CAA6B;AAEzBO,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAELC,MAAAA,SAAS,EAAC;AACRC,QAAAA,MAAM,EAAE,CAAC,OAAD,EAAU,OAAV,EAAmB,OAAnB,EAA4B,OAA5B,EAAqC,OAArC,EAA8C,OAA9C,EAAsD,UAAtD,CADA;AAERC,QAAAA,QAAQ,EAAC,CACP;AACEC,UAAAA,KAAK,EAAG,WADV;AAEEC,UAAAA,IAAI,EAAC,KAAKN,KAAL,CAAWM,IAFlB;AAIEC,UAAAA,eAAe,EAAC,CACd,yBADc,EAEd,yBAFc,EAGd,yBAHc,EAId,yBAJc,EAKd,0BALc,EAMd,yBANc,EAOd,yBAPc,EAQd,yBARc,EASd,uBATc;AAJlB,SADO;AAFD;AAFL,KAAb;AA0BD;;AAGFC,EAAAA,kBAAkB,GAAE;AACnBd,IAAAA,OAAO,CAAC,OAAD,EAAU,MAAV,EAAiBD,YAAY,EAA7B,CAAP,CAAwCgB,IAAxC,CAA6CC,GAAG,IAAG;AACjD,UAAGA,GAAG,IAAI,KAAV,EACA;AACI;AACH;;AACDC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACJ,IAAhB;AACD,WAAKN,KAAL,CAAWa,aAAX,CAAyB;AACrBC,QAAAA,IAAI,EAAG;AACHC,UAAAA,SAAS,EAAG;AACRD,YAAAA,IAAI,EAAG,WADC;AAERR,YAAAA,IAAI,EAAGI,GAAG,CAACJ;AAFH;AADT;AADc,OAAzB;AAQAK,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AAGF,KAjBC,EADmB,CAmBpB;AACC;;AAEJM,EAAAA,MAAM,GAAE;AACJL,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKZ,KAAL,CAAWM,IAAvB;AACF,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGL;AAAK,MAAA,KAAK,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC,oBAAC,GAAD;AACQ,MAAA,IAAI,EAAE,KAAKL,KAAL,CAAWC,SADzB;AAEQ,MAAA,OAAO,EAAE;AACPe,QAAAA,MAAM,EAAE;AAAEC,UAAAA,OAAO,EAAE;AAAX,SADD;AAEPC,QAAAA,KAAK,EAAE;AAELD,UAAAA,OAAO,EAAE,IAFJ;AAGLE,UAAAA,IAAI,EAAE,yCAHD;AAILC,UAAAA,QAAQ,EAAE;AAJL;AAFA,OAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CAHK,CADF;AAuBD;;AAhF0B;;AAkF7B,MAAOC,eAAe,GAAGrB,KAAK,IAAG;AAC/B,SAAM;AACLK,IAAAA,IAAI,EAAGL,KAAK,CAACsB;AADR,GAAN;AAKD,CAND;;AAQA,MAAMC,kBAAkB,GAAG,CAACC,QAAD,EAAWzB,KAAX,KAAoB;AAC7C,SAAO;AAELa,IAAAA,aAAa,EAAIP,IAAD,IAAS;AACvBmB,MAAAA,QAAQ,CAACnB,IAAD,CAAR;AAED;AALI,GAAP;AAQC,CATH;;AAUA,eAAeV,OAAO,CAAC0B,eAAD,EAAiBE,kBAAjB,CAAP,CAA4C1B,KAA5C,CAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport get_datetime from './../../getDateTime'\r\nimport callApi from './../../ultis/apiCaller'\r\nimport {Bar} from 'react-chartjs-2';\r\nimport {connect} from 'react-redux';\r\nimport * as action from '../../actions/index';\r\n\r\nclass Chart extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n           \r\n                chartData:{\r\n                  labels: ['Thứ 2', 'Thứ 3', 'Thứ 4', 'Thứ 5', 'Thứ 6', 'Thứ 7','Chủ nhật'],\r\n                  datasets:[\r\n                    {\r\n                      label : 'Doanh thu',\r\n                      data:this.props.data,\r\n                      \r\n                      backgroundColor:[\r\n                        'rgba(255, 99, 132, 0.6)',\r\n                        'rgba(54, 162, 235, 0.6)',\r\n                        'rgba(255, 206, 86, 0.6)',\r\n                        'rgba(75, 192, 192, 0.6)',\r\n                        'rgba(153, 102, 255, 0.6)',\r\n                        'rgba(255, 159, 64, 0.6)',\r\n                        'rgba(255, 99, 132, 0.6)',\r\n                        'rgba(255, 99, 132, 0.6)',\r\n                        'rgba(62, 138, 138, 1)'\r\n\r\n                      ]\r\n                    }\r\n                  ]\r\n                }\r\n             \r\n        }\r\n      }\r\n    \r\n     \r\n     componentWillMount(){\r\n      callApi('chart', 'POST',get_datetime()).then(res =>{\r\n        if(res == false)\r\n        {\r\n            return;\r\n        }\r\n        console.log(res.data)\r\n       this.props.get_dataChart({\r\n           type : {\r\n               get_chart : {\r\n                   type : 'GET_CHART',\r\n                   data : res.data,\r\n               }\r\n           }\r\n       });\r\n       console.log(res);\r\n    \r\n       \r\n    });\r\n     //this.props.get_dataChart(get_datetime())\r\n     }\r\n \r\n  render(){\r\n      console.log(this.props.data);\r\n    return (\r\n      <div>\r\n\r\n\r\n\t<div class=\"col-md-12\">\r\n  <Bar\r\n          data={this.state.chartData}\r\n          options={{\r\n            legend: { display: false },\r\n            title: {\r\n              \r\n              display: true,\r\n              text: 'Thống Kê Doanh Thu Hằng Ngày Trong Tuần',\r\n              fontSize: 30\r\n            },\r\n           \r\n          }}\r\n        />\r\n\t</div>\r\n\r\n      \r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst  mapStateToProps = state =>{\r\n  return{\r\n   data : state.chart,\r\n\r\n\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) =>{\r\n  return {\r\n  \r\n    get_dataChart : (data) =>{\r\n      dispatch(data);\r\n     \r\n    },\r\n  \r\n  }\r\n  }\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Chart); "]},"metadata":{},"sourceType":"module"}