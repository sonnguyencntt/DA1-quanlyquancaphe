{"ast":null,"code":"import * as Types from '../../../constants/ActionType';\nconst initialState = 1;\nexport const total_revenue = (state = initialState, action) => {\n  let newState = state;\n\n  if (typeof action.type.total_revenue === \"undefined\") {\n    return newState;\n  } else {\n    switch (action.type.total_revenue.type) {\n      case Types.GET_TOTAL_REVENUE:\n        newState = action.type.total_revenue.data;\n        return newState;\n\n      default:\n        return newState;\n    }\n  }\n};\nexport const count_bill = (state = initialState, action) => {\n  let newState = state;\n\n  if (typeof action.type.count_bill === \"undefined\") {\n    return newState;\n  } else {\n    switch (action.type.count_bill.type) {\n      case Types.GET_COUNT_BILL:\n        newState = action.type.count_bill.data;\n        return newState;\n\n      default:\n        return newState;\n    }\n  }\n};\nexport const count_unpaid_bill = (state = initialState, action) => {\n  let newState = state;\n\n  if (typeof action.type.count_unpaid_bill === \"undefined\") {\n    return newState;\n  } else {\n    switch (action.type.count_unpaid_bill.type) {\n      case Types.GET_COUNT_UNPAID_BILL:\n        newState = action.type.count_unpaid_bill.data;\n        return newState;\n\n      default:\n        return newState;\n    }\n  }\n};\nexport const total_unpaid_bill = (state = initialState, action) => {\n  let newState = state;\n\n  if (typeof action.type.total_unpaid_bill === \"undefined\") {\n    return newState;\n  } else {\n    switch (action.type.total_unpaid_bill.type) {\n      case Types.GET_TOTAL_UNPAID_BILL:\n        newState = action.type.total_unpaid_bill.data;\n        return newState;\n\n      default:\n        return newState;\n    }\n  }\n};\nexport const total_debit_bill = (state = initialState, action) => {\n  let newState = state;\n\n  if (typeof action.type.total_debit_bill === \"undefined\") {\n    return newState;\n  } else {\n    switch (action.type.total_debit_bill.type) {\n      case Types.GET_TOTAL_DEBIT_BILL:\n        newState = action.type.total_debit_bill.data;\n        return newState;\n\n      default:\n        return newState;\n    }\n  }\n};\nexport const sum_debit_bill = (state = initialState, action) => {\n  let newState = state;\n\n  if (typeof action.type.sum_debit_bill === \"undefined\") {\n    return newState;\n  } else {\n    switch (action.type.sum_debit_bill.type) {\n      case Types.GET_SUML_DEBIT_BILL:\n        newState = action.type.sum_debit_bill.data;\n        return newState;\n\n      default:\n        return newState;\n    }\n  }\n};","map":{"version":3,"sources":["C:/Users/DELL/Desktop/DOAN1/src/reducers/App/dashboard/bill.js"],"names":["Types","initialState","total_revenue","state","action","newState","type","GET_TOTAL_REVENUE","data","count_bill","GET_COUNT_BILL","count_unpaid_bill","GET_COUNT_UNPAID_BILL","total_unpaid_bill","GET_TOTAL_UNPAID_BILL","total_debit_bill","GET_TOTAL_DEBIT_BILL","sum_debit_bill","GET_SUML_DEBIT_BILL"],"mappings":"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","sourcesContent":["import * as Types from '../../../constants/ActionType';\r\n\r\nconst initialState = 1;\r\n\r\n\r\nexport const total_revenue = (state = initialState , action) =>\r\n{\r\n  let newState = state;\r\n  if(typeof action.type.total_revenue === \"undefined\")\r\n  {\r\n    return newState\r\n  }\r\n  else\r\n  {\r\n  switch(action.type.total_revenue.type){ \r\n  \r\n    case Types.GET_TOTAL_REVENUE :\r\n    \r\n        newState = action.type.total_revenue.data;\r\n        return newState;   \r\n\r\n      default: return newState;\r\n  }\r\n}\r\n}\r\nexport const count_bill = (state = initialState , action) =>\r\n{\r\n  let newState = state;\r\n  if(typeof action.type.count_bill === \"undefined\")\r\n  {\r\n    return newState\r\n  }\r\n  else\r\n  {\r\n  switch(action.type.count_bill.type){ \r\n  \r\n    case Types.GET_COUNT_BILL :\r\n    \r\n        newState = action.type.count_bill.data;\r\n        return newState;   \r\n\r\n      default: return newState;\r\n  }\r\n}\r\n}\r\nexport const count_unpaid_bill = (state = initialState , action) =>\r\n{\r\n  let newState = state;\r\n  if(typeof action.type.count_unpaid_bill === \"undefined\")\r\n  {\r\n    return newState\r\n  }\r\n  else\r\n  {\r\n  switch(action.type.count_unpaid_bill.type){ \r\n  \r\n    case Types.GET_COUNT_UNPAID_BILL :\r\n    \r\n        newState = action.type.count_unpaid_bill.data;\r\n        return newState;   \r\n\r\n      default: return newState;\r\n  }\r\n}\r\n}\r\nexport const total_unpaid_bill = (state = initialState , action) =>\r\n{\r\n  let newState = state;\r\n  if(typeof action.type.total_unpaid_bill === \"undefined\")\r\n  {\r\n    return newState\r\n  }\r\n  else\r\n  {\r\n  switch(action.type.total_unpaid_bill.type){ \r\n  \r\n    case Types.GET_TOTAL_UNPAID_BILL :\r\n    \r\n        newState = action.type.total_unpaid_bill.data;\r\n        return newState;   \r\n\r\n      default: return newState;\r\n  }\r\n}\r\n}\r\nexport const total_debit_bill = (state = initialState , action) =>\r\n{\r\n  let newState = state;\r\n  if(typeof action.type.total_debit_bill === \"undefined\")\r\n  {\r\n    return newState\r\n  }\r\n  else\r\n  {\r\n  switch(action.type.total_debit_bill.type){ \r\n  \r\n    case Types.GET_TOTAL_DEBIT_BILL :\r\n    \r\n        newState = action.type.total_debit_bill.data;\r\n        return newState;   \r\n\r\n      default: return newState;\r\n  }\r\n}\r\n}\r\nexport const sum_debit_bill = (state = initialState , action) =>\r\n{\r\n  let newState = state;\r\n  if(typeof action.type.sum_debit_bill=== \"undefined\")\r\n  {\r\n    return newState\r\n  }\r\n  else\r\n  {\r\n  switch(action.type.sum_debit_bill.type){ \r\n  \r\n    case Types.GET_SUML_DEBIT_BILL :\r\n    \r\n        newState = action.type.sum_debit_bill.data;\r\n        return newState;   \r\n\r\n      default: return newState;\r\n  }\r\n}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}