{"ast":null,"code":"import axios from 'axios';\nimport * as Config from './../constants/Config';\nexport default function (endpoint, method, body) {\n  return axios({\n    method: method,\n    url: `/${endpoint}`,\n    data: body\n  }).catch(err => {\n    console.log(err);\n  });\n}\n;\nexport function middleWare_resPonse() {\n  axios.interceptors.response.use(response => {\n    if (res.config.url == '/checkpass') {\n      return res;\n    }\n\n    if (typeof response.data.err != \"undefined\") {\n      console.log('client-middleware');\n      var res = {\n        err: 'err',\n        data: null\n      };\n      return res;\n    }\n  });\n}","map":{"version":3,"sources":["C:/Users/DELL/Desktop/DOAN1/src/ultis/apiCaller.js"],"names":["axios","Config","endpoint","method","body","url","data","catch","err","console","log","middleWare_resPonse","interceptors","response","use","res","config"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,MAAZ,MAAwB,uBAAxB;AAIA,eAAe,UAASC,QAAT,EAAmBC,MAAnB,EAA2BC,IAA3B,EAAgC;AAC3C,SAAOJ,KAAK,CAAC;AACTG,IAAAA,MAAM,EAAGA,MADA;AAETE,IAAAA,GAAG,EAAI,IAAGH,QAAS,EAFV;AAGTI,IAAAA,IAAI,EAAGF;AAHE,GAAD,CAAL,CAKJG,KALI,CAKEC,GAAG,IAAG;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,GAPM,CAAP;AAQF;AAAC;AAEF,OAAO,SAASG,mBAAT,GAA8B;AAClCX,EAAAA,KAAK,CAACY,YAAN,CAAmBC,QAAnB,CAA4BC,GAA5B,CAAiCD,QAAD,IAAc;AAC1C,QAAGE,GAAG,CAACC,MAAJ,CAAWX,GAAX,IAAkB,YAArB,EACA;AACI,aAAOU,GAAP;AACH;;AACD,QAAG,OAAOF,QAAQ,CAACP,IAAT,CAAcE,GAArB,IAA4B,WAA/B,EACA;AACIC,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACF,UAAIK,GAAG,GAAG;AACNP,QAAAA,GAAG,EAAG,KADA;AAENF,QAAAA,IAAI,EAAG;AAFD,OAAV;AAID,aAAOS,GAAP;AACA;AAEJ,GAfD;AAgBF","sourcesContent":["import axios from 'axios';\r\nimport * as Config from './../constants/Config';\r\n\r\n\r\n\r\nexport default function(endpoint, method, body){\r\n    return axios({\r\n        method : method,\r\n        url : `/${endpoint}`,\r\n        data : body,\r\n        \r\n    }).catch(err =>{\r\n        console.log(err);\r\n    })\r\n } ;\r\n\r\n export function middleWare_resPonse(){\r\n    axios.interceptors.response.use((response) => {\r\n        if(res.config.url == '/checkpass')\r\n        {\r\n            return res;\r\n        }\r\n        if(typeof response.data.err != \"undefined\")\r\n        {\r\n            console.log('client-middleware');\r\n          var res = {\r\n              err : 'err',\r\n              data : null\r\n          }\r\n         return res\r\n        }\r\n\r\n    })\r\n }  "]},"metadata":{},"sourceType":"module"}