{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\DOAN1\\\\src\\\\components\\\\Customer\\\\ListCustomer.js\";\nimport React, { Component } from 'react'; // import './../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\n// import './../../../node_modules/bootstrap/dist/js/bootstrap.min';\n\nimport * as action from '../../actions/index';\nimport { connect } from 'react-redux';\nimport Emty from './Emty';\nimport * as Types from './../../constants/ActionType';\nimport Table from './Table';\n\nclass ListTable extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onDelete = data => {\n      this.props.onDeleteTable({\n        index: 1,\n        id: this.props.form.id_name_search_supplier,\n        debit: Number(this.props.form.debit_search_supplier),\n        indexsupplier: data,\n        type: 'SUPPLIER'\n      });\n    };\n\n    this.showData = (datas, id, style) => {\n      var result = null;\n\n      if (datas.length > 0) {\n        result = datas.map((data, index) => {\n          var statusName = data.idStatus == 1 ? 'Đang sử dụng' : 'Trống';\n          var statusClass = data.idStatus == 1 ? 'success' : 'default';\n          return /*#__PURE__*/React.createElement(\"tr\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 7\n            }\n          }, /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 7\n            }\n          }, (id - 1) * 5 + index + 1), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 5\n            }\n          }, data.IdCustomer), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 5\n            }\n          }, data.CustomerName), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 5\n            }\n          }, data.PhoneNumber), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 5\n            }\n          }, data.Email), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 5\n            }\n          }, data.Address), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 5\n            }\n          }, data.Birthday), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 5\n            }\n          }, data.Debit), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 5\n            }\n          }, /*#__PURE__*/React.createElement(\"img\", {\n            style: style,\n            src: data.Avatar,\n            alt: \"\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 9\n            }\n          })), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 5\n            }\n          }, data.Note), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 5\n            }\n          }, /*#__PURE__*/React.createElement(\"button\", {\n            type: \"button\",\n            class: \"btn btn-primary\",\n            onClick: () => this.onUpdate(data.id),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 9\n            }\n          }, /*#__PURE__*/React.createElement(\"i\", {\n            class: \"fa fa-edit\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 75\n            }\n          }), \"\\xA0\\xA0Update\"), /*#__PURE__*/React.createElement(\"button\", {\n            type: \"button\",\n            class: \"btn btn-danger margin-button\",\n            onClick: () => this.onDelete(data.id),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 9\n            }\n          }, /*#__PURE__*/React.createElement(\"i\", {\n            class: \"fa fa-trash\",\n            \"aria-hidden\": \"true\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 10\n            }\n          }), \"\\xA0\\xA0Delete\")));\n        });\n      } else {\n        return /*#__PURE__*/React.createElement(Emty, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 9\n          }\n        });\n      }\n\n      return result;\n    };\n\n    this.onUpdate = data => {\n      const tables = this.props.table.data.map((table, index) => {\n        if (table.id == data) {\n          this.props.showModal({\n            type: {\n              mtable_ontap: {\n                type: 'MODAL_HEADER_FOR_ONTAP_TABLE',\n                event: 'show-modal'\n              },\n              mtable_text: {\n                type: 'MODAL_HEADER_FOR_INSERT_UPDATE_TABLE',\n                event: 'Chỉnh sửa dữ liệu'\n              },\n              style_event: {\n                type: 'STATUS_STYLE_EVENT',\n                status: false\n              },\n              // onchangetable_idtable : {\n              //   type : 'CHANGE_TABLE_IDTABLE',\n              //   text : table.IdTable\n              // },\n              // onchangetable_name : {\n              //   type : 'CHANGE_TABLE_NAME',\n              //   text : table.TableName\n              // },\n              // onchangetable_idarea : {\n              //   type : 'CHANGE_TABLE_IDAREA',\n              //   text : table.IdArea\n              // }\n              onchangesupplier_idsupplier: {\n                type: Types.CHANGE_CUSTOMER_IDSUPPLIER,\n                text: table.Idsupplier\n              },\n              onchangesupplier_namesupplier: {\n                type: Types.CHANGE_CUSTOMER_NAMESUPPLIER,\n                text: table.Namesupplier\n              },\n              onchangesupplier_emailsupplier: {\n                type: Types.CHANGE_CUSTOMER_EMAILSUPPLIER,\n                text: table.Email\n              },\n              onchangesupplier_phonesupplier: {\n                type: Types.CHANGE_CUSTOMER_PHONESUPPLIER,\n                text: table.Phone\n              },\n              onchangesupplier_addresssupplier: {\n                type: Types.CHANGE_CUSTOMER_ADDRESSSUPPLIER,\n                text: table.Address\n              },\n              onchangesupplier_notesupplier: {\n                type: Types.CHANGE_CUSTOMER_NOTESUPPLIER,\n                text: table.Note\n              },\n              onchangesupplier_debitsupplier: {\n                type: Types.CHANGE_CUSTOMER_DEBITSUPPLIER,\n                text: table.Debit\n              },\n              onchangesupplier_avatarsupplier: {\n                type: Types.CHANGE_CUSTOMER_AVATARSUPPLIER,\n                text: table.Avatar\n              },\n              onchange_index_supplier: {\n                type: Types.CHANGE_INDEX_SUPPLIER,\n                text: table.id\n              }\n            }\n          });\n        }\n      });\n    };\n\n    this.callbackFunction = data => {\n      this.setState({\n        id: data.id,\n        idarea: data.IdArea,\n        name: data.BranchName,\n        onTap: 'modal fade show-modal'\n      });\n    };\n\n    this.callbackfunctionforSubmitupdate = (id, status) => {\n      this.setState({\n        onTap: status\n      }, () => {\n        this.props.onUpdateTable(id);\n      });\n    };\n\n    this.callbackfunctionForonChange = (name, value) => {\n      this.setState({\n        [name]: value\n      });\n    };\n  }\n\n  componentWillMount() {\n    this.props.fetchAllTables({\n      index: 1,\n      id: this.props.form.id_name_search_customer,\n      debit: Number(this.props.form.debit_search_customer),\n      type: 'CUSTOMER'\n    });\n  }\n\n  render() {\n    const style = {\n      width: '100px'\n    };\n    return /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 6\n      }\n    }, this.showData(this.props.customer.data, this.props.customer.index, style));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  console.log(state.table);\n  return {\n    table: state.table,\n    customer: state.customer,\n    event: state.event,\n    form: state.form_onChange\n  };\n};\n\nconst mapDispatchToProps = (dispatch, props) => {\n  return {\n    showModal: tap => {\n      dispatch(tap);\n    },\n    fetchAllTables: data => {\n      dispatch(action.acFetchCustomerRequest(data));\n    },\n    onDeleteTable: data => {\n      dispatch(action.acDeleteTableRequest(data));\n    } // onDeleteProduct : (id) =>{\n    //   dispatch(action.acDeleteProductsRequest(id));\n    // },\n    // onUpdateTable : (id) =>{\n    //   dispatch(action.acUpdateProductsRequest(id));\n    // }\n\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListTable);","map":{"version":3,"sources":["C:/Users/DELL/Desktop/DOAN1/src/components/Customer/ListCustomer.js"],"names":["React","Component","action","connect","Emty","Types","Table","ListTable","onDelete","data","props","onDeleteTable","index","id","form","id_name_search_supplier","debit","Number","debit_search_supplier","indexsupplier","type","showData","datas","style","result","length","map","statusName","idStatus","statusClass","IdCustomer","CustomerName","PhoneNumber","Email","Address","Birthday","Debit","Avatar","Note","onUpdate","tables","table","showModal","mtable_ontap","event","mtable_text","style_event","status","onchangesupplier_idsupplier","CHANGE_CUSTOMER_IDSUPPLIER","text","Idsupplier","onchangesupplier_namesupplier","CHANGE_CUSTOMER_NAMESUPPLIER","Namesupplier","onchangesupplier_emailsupplier","CHANGE_CUSTOMER_EMAILSUPPLIER","onchangesupplier_phonesupplier","CHANGE_CUSTOMER_PHONESUPPLIER","Phone","onchangesupplier_addresssupplier","CHANGE_CUSTOMER_ADDRESSSUPPLIER","onchangesupplier_notesupplier","CHANGE_CUSTOMER_NOTESUPPLIER","onchangesupplier_debitsupplier","CHANGE_CUSTOMER_DEBITSUPPLIER","onchangesupplier_avatarsupplier","CHANGE_CUSTOMER_AVATARSUPPLIER","onchange_index_supplier","CHANGE_INDEX_SUPPLIER","callbackFunction","setState","idarea","IdArea","name","BranchName","onTap","callbackfunctionforSubmitupdate","onUpdateTable","callbackfunctionForonChange","value","componentWillMount","fetchAllTables","id_name_search_customer","debit_search_customer","render","width","customer","mapStateToProps","state","console","log","form_onChange","mapDispatchToProps","dispatch","tap","acFetchCustomerRequest","acDeleteTableRequest"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\n// import './../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\n// import './../../../node_modules/bootstrap/dist/js/bootstrap.min';\r\nimport * as action from '../../actions/index';\r\nimport {connect} from 'react-redux';\r\n\r\nimport Emty from './Emty';\r\nimport * as Types from './../../constants/ActionType'\r\nimport Table from './Table';\r\n\r\n\r\nclass ListTable extends Component {\r\n  \r\n\r\n  // shouldComponentUpdate(nextProps, nextState)\r\n\t// {\r\n  //  if((JSON.stringify(nextProps.table.data) == JSON.stringify(this.props.table.data)) && (nextProps.table.index == this.props.table.index))\r\n\t// \t{\r\n  //     return false;\r\n  //   }\r\n  //   return true;\r\n\t// }\r\n\r\nonDelete = (data) =>{\r\n  this.props.onDeleteTable({\r\n                                index : 1,\r\n                                id : this.props.form.id_name_search_supplier,\r\n                                debit : Number(this.props.form.debit_search_supplier),\r\n                                indexsupplier : data,\r\n                                type : 'SUPPLIER'\r\n  })\r\n}\r\n    componentWillMount(){\r\n      this.props.fetchAllTables({index : 1,\r\n                                id : this.props.form.id_name_search_customer,\r\n                                debit : Number(this.props.form.debit_search_customer),\r\n                                type : 'CUSTOMER',\r\n\r\n        }\r\n     );\r\n    }\r\n    showData = (datas,id, style) =>\r\n    {\r\n    var result = null;\r\n    if(datas.length > 0)\r\n    {\r\n      \r\n      result = datas.map((data,index) =>\r\n      {\r\n        var statusName = (data.idStatus == 1) ? 'Đang sử dụng'  : 'Trống';\r\n        var statusClass = (data.idStatus == 1) ? 'success' : 'default';\r\n     return (\r\n \r\n      <tr>\r\n      <td>{((id-1) * 5) + index+1}</td>\r\n    <td>{data.IdCustomer}</td>\r\n    <td>{data.CustomerName}</td>\r\n    <td>{data.PhoneNumber}</td>\r\n    {/* <td>{data.idStatus}</td> */}\r\n    <td>{data.Email}</td>\r\n    <td>{data.Address}</td>\r\n    <td>{data.Birthday}</td>\r\n    <td>{data.Debit}</td>\r\n\r\n    <td><img style = {style} src={data.Avatar} alt=\"\"/></td>\r\n    <td>{data.Note}</td>\r\n\r\n\r\n\r\n\r\n   \r\n\r\n    <td>\r\n        \r\n         \r\n        <button type=\"button\" \r\n        class=\"btn btn-primary\"  onClick = {() => this.onUpdate(data.id)}><i class=\"fa fa-edit\"></i>&nbsp;&nbsp;Update</button>\r\n        \r\n        <button type=\"button\" \r\n        class=\"btn btn-danger margin-button\"\r\n        onClick = {() => this.onDelete(data.id)}\r\n        ><i class=\"fa fa-trash\" aria-hidden=\"true\"></i>&nbsp;&nbsp;Delete</button>\r\n        \r\n        \r\n\r\n     \r\n    </td>\r\n\r\n  </tr>\r\n      \r\n      \r\n       );\r\n      })\r\n    }\r\n    else\r\n    {\r\n      return (\r\n        <Emty/>\r\n      )\r\n    }\r\n   return result\r\n    };\r\n\r\nonUpdate = (data) =>{\r\nconst tables = this.props.table.data.map((table, index)=>{\r\nif(table.id == data)\r\n{\r\n  this.props.showModal({type : {\r\n    mtable_ontap : {\r\n        type : 'MODAL_HEADER_FOR_ONTAP_TABLE',\r\n        event : 'show-modal',\r\n          }, \r\n          mtable_text : {\r\n          type : 'MODAL_HEADER_FOR_INSERT_UPDATE_TABLE',\r\n          event : 'Chỉnh sửa dữ liệu'\r\n          },\r\n          style_event : {\r\n            type : 'STATUS_STYLE_EVENT',\r\n            status : false\r\n          },\r\n          // onchangetable_idtable : {\r\n          //   type : 'CHANGE_TABLE_IDTABLE',\r\n          //   text : table.IdTable\r\n          // },\r\n          // onchangetable_name : {\r\n          //   type : 'CHANGE_TABLE_NAME',\r\n          //   text : table.TableName\r\n          // },\r\n          // onchangetable_idarea : {\r\n          //   type : 'CHANGE_TABLE_IDAREA',\r\n          //   text : table.IdArea\r\n          // }\r\n          onchangesupplier_idsupplier :{\r\n            type : Types.CHANGE_CUSTOMER_IDSUPPLIER,\r\n            text : table.Idsupplier\r\n        },onchangesupplier_namesupplier :{\r\n          type : Types.CHANGE_CUSTOMER_NAMESUPPLIER,\r\n          text : table.Namesupplier\r\n      },\r\n      onchangesupplier_emailsupplier :{\r\n        type : Types.CHANGE_CUSTOMER_EMAILSUPPLIER,\r\n        text : table.Email\r\n    },\r\n    onchangesupplier_phonesupplier :{\r\n      type :Types.CHANGE_CUSTOMER_PHONESUPPLIER,\r\n      text : table.Phone\r\n  },\r\n  onchangesupplier_addresssupplier :{\r\n    type : Types.CHANGE_CUSTOMER_ADDRESSSUPPLIER,\r\n    text : table.Address\r\n},\r\nonchangesupplier_notesupplier :{\r\n  type : Types.CHANGE_CUSTOMER_NOTESUPPLIER,\r\n  text : table.Note\r\n},\r\nonchangesupplier_debitsupplier :{\r\n  type :Types.CHANGE_CUSTOMER_DEBITSUPPLIER,\r\n  text : table.Debit\r\n}, onchangesupplier_avatarsupplier :{\r\n  type: Types.CHANGE_CUSTOMER_AVATARSUPPLIER,\r\n  text : table.Avatar\r\n},\r\nonchange_index_supplier :{\r\n  type: Types.CHANGE_INDEX_SUPPLIER,\r\n  text : table.id\r\n}\r\n\r\n\r\n\r\n        }\r\n       \r\n  \r\n  \r\n  })\r\n}\r\n})\r\n\r\n \r\n}\r\n\r\n  callbackFunction = (data) => \r\n  {\r\n  \r\n    this.setState({\r\n      id : data.id,\r\n      idarea : data.IdArea,\r\n      name : data.BranchName,\r\n      onTap : 'modal fade show-modal'\r\n    })\r\n  }\r\n  callbackfunctionforSubmitupdate = (id, status) =>{\r\n    this.setState({onTap : status}, ()=>{\r\n      this.props.onUpdateTable(id)\r\n    })\r\n\r\n  }\r\n  callbackfunctionForonChange = (name, value) =>{\r\n   \r\n    this.setState({\r\n      [name] : value\r\n    })\r\n \r\n  }\r\n \r\n \r\n\r\n  render() \r\n  \r\n  {\r\n      const style = {width : '100px'}\r\n    return (\r\n     <tbody>\r\n\t\t\t\t\t\t{this.showData(this.props.customer.data, this.props.customer.index, style)}\r\n\r\n\r\n\r\n\r\n           \r\n            \r\n             </tbody>\r\n       \r\n    )\r\n    \r\n\r\n}\r\n}\r\n\r\n\r\n\r\nconst  mapStateToProps = state =>{\r\n  console.log(state.table);\r\n\r\n  return{\r\n   table : state.table,\r\n   customer : state.customer,\r\n   event : state.event,\r\n  form : state.form_onChange\r\n  }\r\n};\r\n\r\n\r\nconst mapDispatchToProps = (dispatch, props) =>{\r\n  return {\r\n    showModal : (tap) =>{\r\n      dispatch(tap)\r\n    },\r\n    fetchAllTables : (data) =>{\r\n      dispatch(action.acFetchCustomerRequest(data));\r\n     \r\n    },\r\n    onDeleteTable : (data) =>{\r\n      dispatch(action.acDeleteTableRequest(data))\r\n    }\r\n    // onDeleteProduct : (id) =>{\r\n     \r\n    //   dispatch(action.acDeleteProductsRequest(id));\r\n    // },\r\n    // onUpdateTable : (id) =>{\r\n     \r\n    //   dispatch(action.acUpdateProductsRequest(id));\r\n    // }\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(ListTable);"]},"metadata":{},"sourceType":"module"}