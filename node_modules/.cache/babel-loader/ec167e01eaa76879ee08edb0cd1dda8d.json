{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\DOAN1\\\\src\\\\components\\\\Customer\\\\ListPagination_C.js\";\nimport React, { Component } from 'react'; // import './../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\n// import './../../../node_modules/bootstrap/dist/js/bootstrap.min';\n\nimport * as action from '../../actions/index';\nimport Li from './LiNavigation_C';\nimport { connect } from 'react-redux';\n\nclass ListPagination extends Component {\n  // shouldComponentUpdate(nextProps, nextState)\n  // {\n  //  if(nextProps.table.count == this.props.table.count && nextProps.table.index == this.props.table.index)\n  // \t{\n  //     return false;\n  //   }\n  //   return true;\n  // }\n  constructor(props) {\n    super(props);\n\n    this.prevPage = e => {\n      e.preventDefault();\n\n      if (this.props.table.index == 1) {\n        return;\n      } else {\n        this.props.fetchAllTables({\n          index: this.props.table.index - 1,\n          room: this.props.event.room,\n          table: this.props.event.table,\n          status: this.props.event.status,\n          type: 'TABLE'\n        });\n      }\n    };\n\n    this.nextPage = e => {\n      e.preventDefault();\n\n      if (this.props.table.index == this.props.table.count) {\n        return;\n      } else {\n        this.props.fetchAllTables({\n          index: this.props.table.index + 1,\n          room: this.props.event.room,\n          table: this.props.event.table,\n          status: this.props.event.status,\n          type: 'TABLE'\n        });\n      }\n    };\n\n    this.showPagination = number => {\n      var result = [];\n\n      if (number > 0) {\n        for (var i = 1; i <= number; i++) {\n          if (i == this.props.customer.index) {\n            result[i] = /*#__PURE__*/React.createElement(Li, {\n              index: i,\n              id: this.state.active,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 20\n              }\n            });\n          } else {\n            result[i] = /*#__PURE__*/React.createElement(Li, {\n              index: i,\n              id: \"\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 21\n              }\n            });\n          }\n        }\n\n        return result;\n      }\n\n      return result;\n    };\n\n    this.state = {\n      active: 'pagination-col'\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      class: \"col-xs-12 col-sm-12 col-md-12 col-lg-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      class: \"pagination pagination-lg float-pagination\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      onClick: e => {\n        this.prevPage(e);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 45\n      }\n    }, \"\\xAB\")), this.showPagination(this.props.customer.count), /*#__PURE__*/React.createElement(\"li\", {\n      onClick: e => {\n        this.nextPage(e);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 45\n      }\n    }, \"\\xBB\"))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    table: state.table,\n    event: state.event,\n    customer: state.customer\n  };\n};\n\nconst mapDispatchToProps = (dispatch, props) => {\n  return {\n    fetchAllTables: index => {\n      dispatch(action.acFetchTableRequest(index));\n    },\n    changefornavigation: index => {\n      dispatch(index);\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListPagination);","map":{"version":3,"sources":["C:/Users/DELL/Desktop/DOAN1/src/components/Customer/ListPagination_C.js"],"names":["React","Component","action","Li","connect","ListPagination","constructor","props","prevPage","e","preventDefault","table","index","fetchAllTables","room","event","status","type","nextPage","count","showPagination","number","result","i","customer","state","active","render","mapStateToProps","mapDispatchToProps","dispatch","acFetchTableRequest","changefornavigation"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\n// import './../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\n// import './../../../node_modules/bootstrap/dist/js/bootstrap.min';\r\nimport * as action from '../../actions/index';\r\nimport Li from './LiNavigation_C';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\nclass ListPagination extends Component {\r\n  // shouldComponentUpdate(nextProps, nextState)\r\n\t// {\r\n  //  if(nextProps.table.count == this.props.table.count && nextProps.table.index == this.props.table.index)\r\n\t// \t{\r\n  //     return false;\r\n  //   }\r\n  //   return true;\r\n\t// }\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n     active : 'pagination-col',\r\n     \r\n    }\r\n    } \r\n\r\n\r\n    prevPage = (e) =>{\r\n      e.preventDefault()\r\n\r\n      if(this.props.table.index == 1)\r\n      {\r\n        return;\r\n      }\r\n      else\r\n      {\r\n        this.props.fetchAllTables({index : this.props.table.index - 1,\r\n          room: this.props.event.room,\r\n          table: this.props.event.table,\r\n          status: this.props.event.status,\r\n          type : 'TABLE'\r\n        })\r\n       \r\n      }\r\n    }\r\n    nextPage = (e) =>{\r\n      e.preventDefault()\r\n\r\n      if(this.props.table.index == this.props.table.count)\r\n      {\r\n        return;\r\n      }\r\n      else\r\n      {\r\n        this.props.fetchAllTables({index : this.props.table.index + 1,\r\n          room: this.props.event.room,\r\n          table: this.props.event.table,\r\n          status: this.props.event.status,\r\n          type : 'TABLE'\r\n        })\r\n\r\n\r\n       \r\n      }\r\n    }\r\n  \r\n    showPagination = (number) =>\r\n    {\r\n        var result = [];\r\nif(number > 0)\r\n{\r\n    for (var i =1; i<= number;i++)\r\n    {\r\n       if(i==this.props.customer.index){\r\n\r\n       result[i] = <Li index = {i}\r\n       id = {this.state.active}\r\n       />\r\n      \r\n      }\r\n      else\r\n      {\r\n        result[i] = <Li index = {i}\r\n        id = ''\r\n\r\n        />\r\n       }\r\n    }\r\n    return result;\r\n}\r\n\r\n    return result;\r\n\r\n\r\n    };\r\n\r\n\r\n  render() \r\n  \r\n  {\r\n    \r\n    return (\r\n        <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n\t\t\r\n\t\t<ul class=\"pagination pagination-lg float-pagination\">\r\n\t\t\t<li onClick = {(e) =>{this.prevPage(e)}}><a href=\"#\">&laquo;</a></li>\r\n            {this.showPagination(this.props.customer.count)}\r\n\t\t\r\n\t\t\t<li onClick = {(e) =>{this.nextPage(e)}}><a href=\"#\">&raquo;</a></li>\r\n\t\t</ul>\r\n\t\t\r\n\t</div>\r\n       \r\n    )\r\n    \r\n\r\n}\r\n}\r\n\r\nconst  mapStateToProps = state =>{\r\n  return{\r\n    table : state.table,\r\n    event : state.event,\r\n    customer : state.customer\r\n\r\n  \r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) =>{\r\nreturn {\r\n  fetchAllTables : (index) =>{\r\n    dispatch(action.acFetchTableRequest(index));\r\n   \r\n  },\r\n  changefornavigation : (index) =>{\r\n    dispatch(index)\r\n  }\r\n  \r\n  \r\n}\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(ListPagination);\r\n"]},"metadata":{},"sourceType":"module"}